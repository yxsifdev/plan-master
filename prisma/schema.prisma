// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  image         String?
  emailVerified DateTime?
  accounts      Account[]
  sessions      Session[]
  Notes         Notes[]
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Notes {
  id        String      @id @default(cuid())
  title     String
  content   String?     @db.VarChar(1500)
  url       String?
  status    NotesStatus @default(ACTIVE)
  isShared  Boolean     @default(false)
  priority  Int         @default(0) // 0 = Baja, 1 = Media, 2 = Alta
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  deadline  DateTime?
  userId    String
  user      User        @relation(fields: [userId], references: [id])
  Tags      Tags[]

  @@map("notes")
}

model Tags {
  id        String   @id @default(cuid())
  name      String
  color     String?  @default("#262626")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  noteId    String
  note      Notes    @relation(fields: [noteId], references: [id])

  @@map("tags")
}

enum NotesStatus {
  ACTIVE
  PROGRESS
  COMPLETED
}
